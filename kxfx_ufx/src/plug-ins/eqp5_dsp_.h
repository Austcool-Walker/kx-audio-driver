
#ifndef _NO_STATICS

// ............................................................................

const char* const eqp5_dsp_name		= "EQ P5";
const char* const eqp5_dsp_copyright	= UCOPYRIGHT;
const char* const eqp5_dsp_engine	= "";
const char* const eqp5_dsp_created	= "May 9 2003";
const char* const eqp5_dsp_comment	= "5-Band Parametric Equalizer; $nobypass";
const char* const eqp5_dsp_guid		= "8010000F-0ADF-11D6-BFBC-D4F706E10C52";

const int eqp5_dsp_itramsize	= 0x00000; // 0.00 ms (0 samples)
const int eqp5_dsp_xtramsize	= 0x00000; // 0 ms (0 samples)

#define R(i)
#define _	0xFFFF,
const dsp_register_info eqp5_dsp_info[] =
{
R(0)	{"L", 		0x4000u, 0x07, _ 0x00000000},	// input
R(1)	{"R", 		0x4001u, 0x07, _ 0x00000000},	// input
R(2)	{"L", 		0x8000u, 0x08, _ 0x00000000},	// output
R(3)	{"R", 		0x8001u, 0x08, _ 0x00000000},	// output
R(4)	{"r004", 		0x8002u, 0x01, _ 0x00000000},	// static
R(5)	{"r005", 		0x8003u, 0x01, _ 0x00000000},	// static
R(6)	{"r006", 		0x8004u, 0x01, _ 0x00000000},	// static
R(7)	{"r007", 		0x8005u, 0x01, _ 0x00000000},	// static
R(8)	{"r008", 		0x8006u, 0x01, _ 0x00000000},	// static
R(9)	{"r009", 		0x8007u, 0x01, _ 0x00000000},	// static
R(10)	{"r010", 		0x8008u, 0x01, _ 0x00000000},	// static
R(11)	{"r011", 		0x8009u, 0x01, _ 0x00000000},	// static
R(12)	{"r012", 		0x800Au, 0x01, _ 0x00000000},	// static
R(13)	{"r013", 		0x800Bu, 0x01, _ 0x00000000},	// static
R(14)	{"r014", 		0x800Cu, 0x01, _ 0x00000000},	// static
R(15)	{"r015", 		0x800Du, 0x01, _ 0x00000000},	// static
R(16)	{"r016", 		0x800Eu, 0x01, _ 0x00000000},	// static
R(17)	{"r017", 		0x800Fu, 0x01, _ 0x00000000},	// static
R(18)	{"r018", 		0x8010u, 0x01, _ 0x00000000},	// static
R(19)	{"r019", 		0x8011u, 0x01, _ 0x00000000},	// static
R(20)	{"r020", 		0x8012u, 0x01, _ 0x00000000},	// static
R(21)	{"r021", 		0x8013u, 0x01, _ 0x00000000},	// static
R(22)	{"r022", 		0x8014u, 0x01, _ 0x00000000},	// static
R(23)	{"r023", 		0x8015u, 0x01, _ 0x00000000},	// static
R(24)	{"r024", 		0x8016u, 0x01, _ 0x00000000},	// static
R(25)	{"r025", 		0x8017u, 0x01, _ 0x00000000},	// static
R(26)	{"r026", 		0x8018u, 0x01, _ 0x00000000},	// static
R(27)	{"r027", 		0x8019u, 0x01, _ 0x00000000},	// static
R(28)	{"r028", 		0x801Au, 0x01, _ 0x00000000},	// static
R(29)	{"r029", 		0x801Bu, 0x01, _ 0x00000000},	// static
R(30)	{"r030", 		0x801Cu, 0x01, _ 0x00000000},	// static
R(31)	{"r031", 		0x801Du, 0x01, _ 0x00000000},	// static
R(32)	{"r032", 		0x801Eu, 0x01, _ 0x00000000},	// static
R(33)	{"r033", 		0x801Fu, 0x01, _ 0x00000000},	// static
R(34)	{"r034", 		0x8020u, 0x01, _ 0x00000000},	// static
R(35)	{"r035", 		0x8021u, 0x01, _ 0x00000000},	// static
R(36)	{"r036", 		0x8022u, 0x01, _ 0x00000000},	// static
R(37)	{"r037", 		0x8023u, 0x01, _ 0x00000000},	// static
R(38)	{"r038", 		0x8024u, 0x01, _ 0x00000000},	// static
R(39)	{"r039", 		0x8025u, 0x01, _ 0x00000000},	// static
R(40)	{"r040", 		0x8026u, 0x01, _ 0x00000000},	// static
R(41)	{"r041", 		0x8027u, 0x01, _ 0x00000000},	// static
R(42)	{"r042", 		0x8028u, 0x01, _ 0x00000000},	// static
R(43)	{"r043", 		0x8029u, 0x01, _ 0x00000000},	// static
R(44)	{"r044", 		0x802Au, 0x01, _ 0x00000000},	// static
R(45)	{"r045", 		0x802Bu, 0x01, _ 0x00000001},	// static
R(46)	{"r046", 		0x802Cu, 0x01, _ 0x7FFFFFFF},	// static, 1.0
R(47)	{"r047", 		0x802Du, 0x01, _ 0x00066666},	// static
R(48)	{"r048", 		0x802Eu, 0x03, _ 0x00000000},	// temp
};
#undef _
#undef R

#define I(i)
const dsp_code eqp5_dsp_code[] =
{
I(0)	{0x0, 0x802Eu, 0x2050u, 0x4000u, 0x8002u},	// {macs,	R_T, 0x2050u, R_IN0, R_B00	},
I(1)	{0x6, 0x8000u, 0x2056u, 0x8017u, 0x2040u},	// {acc3,	R_OUT0, 0x2056u, R_Z001, 0x2040u	},
I(2)	{0x0, 0x8017u, 0x8018u, 0x8000u, 0x8005u},	// {macs,	R_Z001, R_Z002, R_OUT0, R_A01	},
I(3)	{0x0, 0x8017u, 0x2056u, 0x802Eu, 0x8003u},	// {macs,	R_Z001, 0x2056u, R_T, R_B01	},
I(4)	{0x0, 0x8018u, 0x2040u, 0x8000u, 0x8006u},	// {macs,	R_Z002, 0x2040u, R_OUT0, R_A02	},
I(5)	{0x0, 0x8018u, 0x2056u, 0x802Eu, 0x8004u},	// {macs,	R_Z002, 0x2056u, R_T, R_B02	},
I(6)	{0x6, 0x802Eu, 0x8000u, 0x8019u, 0x2040u},	// {acc3,	R_T, R_OUT0, R_Z011, 0x2040u	},
I(7)	{0x0, 0x8019u, 0x801Au, 0x802Eu, 0x8009u},	// {macs,	R_Z011, R_Z012, R_T, R_A11	},
I(8)	{0x0, 0x8019u, 0x2056u, 0x8000u, 0x8007u},	// {macs,	R_Z011, 0x2056u, R_OUT0, R_B11	},
I(9)	{0x0, 0x801Au, 0x2040u, 0x802Eu, 0x800Au},	// {macs,	R_Z012, 0x2040u, R_T, R_A12	},
I(10)	{0x0, 0x801Au, 0x2056u, 0x8000u, 0x8008u},	// {macs,	R_Z012, 0x2056u, R_OUT0, R_B12	},
I(11)	{0x6, 0x8000u, 0x802Eu, 0x801Bu, 0x2040u},	// {acc3,	R_OUT0, R_T, R_Z021, 0x2040u	},
I(12)	{0x0, 0x801Bu, 0x801Cu, 0x8000u, 0x800Du},	// {macs,	R_Z021, R_Z022, R_OUT0, R_A21	},
I(13)	{0x0, 0x801Bu, 0x2056u, 0x802Eu, 0x800Bu},	// {macs,	R_Z021, 0x2056u, R_T, R_B21	},
I(14)	{0x0, 0x801Cu, 0x2040u, 0x8000u, 0x800Eu},	// {macs,	R_Z022, 0x2040u, R_OUT0, R_A22	},
I(15)	{0x0, 0x801Cu, 0x2056u, 0x802Eu, 0x800Cu},	// {macs,	R_Z022, 0x2056u, R_T, R_B22	},
I(16)	{0x6, 0x802Eu, 0x8000u, 0x801Du, 0x2040u},	// {acc3,	R_T, R_OUT0, R_Z031, 0x2040u	},
I(17)	{0x0, 0x801Du, 0x801Eu, 0x802Eu, 0x8011u},	// {macs,	R_Z031, R_Z032, R_T, R_A31	},
I(18)	{0x0, 0x801Du, 0x2056u, 0x8000u, 0x800Fu},	// {macs,	R_Z031, 0x2056u, R_OUT0, R_B31	},
I(19)	{0x0, 0x801Eu, 0x2040u, 0x802Eu, 0x8012u},	// {macs,	R_Z032, 0x2040u, R_T, R_A32	},
I(20)	{0x0, 0x801Eu, 0x2056u, 0x8000u, 0x8010u},	// {macs,	R_Z032, 0x2056u, R_OUT0, R_B32	},
I(21)	{0x6, 0x8000u, 0x802Eu, 0x801Fu, 0x2040u},	// {acc3,	R_OUT0, R_T, R_Z041, 0x2040u	},
I(22)	{0x0, 0x801Fu, 0x8020u, 0x8000u, 0x8015u},	// {macs,	R_Z041, R_Z042, R_OUT0, R_A41	},
I(23)	{0x0, 0x801Fu, 0x2056u, 0x802Eu, 0x8013u},	// {macs,	R_Z041, 0x2056u, R_T, R_B41	},
I(24)	{0x0, 0x8020u, 0x2040u, 0x8000u, 0x8016u},	// {macs,	R_Z042, 0x2040u, R_OUT0, R_A42	},
I(25)	{0x0, 0x8020u, 0x2056u, 0x802Eu, 0x8014u},	// {macs,	R_Z042, 0x2056u, R_T, R_B42	},
I(26)	{0x4, 0x8000u, 0x2047u, 0x8000u, 0x802Bu},	// {macints,	R_OUT0, 0x2047u, R_OUT0, R_G	},
I(27)	{0x0, 0x802Eu, 0x2050u, 0x4001u, 0x8002u},	// {macs,	R_T, 0x2050u, R_IN1, R_B00	},
I(28)	{0x6, 0x8001u, 0x2056u, 0x8021u, 0x2040u},	// {acc3,	R_OUT1, 0x2056u, R_Z101, 0x2040u	},
I(29)	{0x0, 0x8021u, 0x8022u, 0x8001u, 0x8005u},	// {macs,	R_Z101, R_Z102, R_OUT1, R_A01	},
I(30)	{0x0, 0x8021u, 0x2056u, 0x802Eu, 0x8003u},	// {macs,	R_Z101, 0x2056u, R_T, R_B01	},
I(31)	{0x0, 0x8022u, 0x2040u, 0x8001u, 0x8006u},	// {macs,	R_Z102, 0x2040u, R_OUT1, R_A02	},
I(32)	{0x0, 0x8022u, 0x2056u, 0x802Eu, 0x8004u},	// {macs,	R_Z102, 0x2056u, R_T, R_B02	},
I(33)	{0x6, 0x802Eu, 0x8001u, 0x8023u, 0x2040u},	// {acc3,	R_T, R_OUT1, R_Z111, 0x2040u	},
I(34)	{0x0, 0x8023u, 0x8024u, 0x802Eu, 0x8009u},	// {macs,	R_Z111, R_Z112, R_T, R_A11	},
I(35)	{0x0, 0x8023u, 0x2056u, 0x8001u, 0x8007u},	// {macs,	R_Z111, 0x2056u, R_OUT1, R_B11	},
I(36)	{0x0, 0x8024u, 0x2040u, 0x802Eu, 0x800Au},	// {macs,	R_Z112, 0x2040u, R_T, R_A12	},
I(37)	{0x0, 0x8024u, 0x2056u, 0x8001u, 0x8008u},	// {macs,	R_Z112, 0x2056u, R_OUT1, R_B12	},
I(38)	{0x6, 0x8001u, 0x802Eu, 0x8025u, 0x2040u},	// {acc3,	R_OUT1, R_T, R_Z121, 0x2040u	},
I(39)	{0x0, 0x8025u, 0x8026u, 0x8001u, 0x800Du},	// {macs,	R_Z121, R_Z122, R_OUT1, R_A21	},
I(40)	{0x0, 0x8025u, 0x2056u, 0x802Eu, 0x800Bu},	// {macs,	R_Z121, 0x2056u, R_T, R_B21	},
I(41)	{0x0, 0x8026u, 0x2040u, 0x8001u, 0x800Eu},	// {macs,	R_Z122, 0x2040u, R_OUT1, R_A22	},
I(42)	{0x0, 0x8026u, 0x2056u, 0x802Eu, 0x800Cu},	// {macs,	R_Z122, 0x2056u, R_T, R_B22	},
I(43)	{0x6, 0x802Eu, 0x8001u, 0x8027u, 0x2040u},	// {acc3,	R_T, R_OUT1, R_Z131, 0x2040u	},
I(44)	{0x0, 0x8027u, 0x8028u, 0x802Eu, 0x8011u},	// {macs,	R_Z131, R_Z132, R_T, R_A31	},
I(45)	{0x0, 0x8027u, 0x2056u, 0x8001u, 0x800Fu},	// {macs,	R_Z131, 0x2056u, R_OUT1, R_B31	},
I(46)	{0x0, 0x8028u, 0x2040u, 0x802Eu, 0x8012u},	// {macs,	R_Z132, 0x2040u, R_T, R_A32	},
I(47)	{0x0, 0x8028u, 0x2056u, 0x8001u, 0x8010u},	// {macs,	R_Z132, 0x2056u, R_OUT1, R_B32	},
I(48)	{0x6, 0x8001u, 0x802Eu, 0x8029u, 0x2040u},	// {acc3,	R_OUT1, R_T, R_Z141, 0x2040u	},
I(49)	{0x0, 0x8029u, 0x802Au, 0x8001u, 0x8015u},	// {macs,	R_Z141, R_Z142, R_OUT1, R_A41	},
I(50)	{0x0, 0x8029u, 0x2056u, 0x802Eu, 0x8013u},	// {macs,	R_Z141, 0x2056u, R_T, R_B41	},
I(51)	{0x0, 0x802Au, 0x2040u, 0x8001u, 0x8016u},	// {macs,	R_Z142, 0x2040u, R_OUT1, R_A42	},
I(52)	{0x0, 0x802Au, 0x2056u, 0x802Eu, 0x8014u},	// {macs,	R_Z142, 0x2056u, R_T, R_B42	},
I(53)	{0x4, 0x8001u, 0x2047u, 0x8001u, 0x802Bu},	// {macints,	R_OUT1, 0x2047u, R_OUT1, R_G	},
I(54)	{0xE, 0x8002u, 0x8002u, 0x802Du, 0x802Cu},	// {interp,	R_B00, R_B00, R_D, R_BX	},
};
#undef I

// ............................................................................

const char* const eqp5_dspm_name		= eqp5_dsp_name;
const char* const eqp5_dspm_copyright	= eqp5_dsp_copyright;
const char* const eqp5_dspm_engine	= eqp5_dsp_engine;
const char* const eqp5_dspm_created	= eqp5_dsp_created;
const char* const eqp5_dspm_comment	= "5-Band Parametric Equalizer, Mono; $nobypass";
const char* const eqp5_dspm_guid		= "8010000F-0ADF-11D7-BFBC-D4F706E10C52";

const int eqp5_dspm_itramsize	= eqp5_dsp_itramsize;
const int eqp5_dspm_xtramsize	= eqp5_dsp_itramsize;

#define R(i)
#define _	0xFFFF,
const dsp_register_info eqp5_dspm_info[] =
{
R(0)	{"I", 		0x4000u, 0x07, _ 0x00000000},	// input
//R(1)	{"R", 		0x4001u, 0x07, _ 0x00000000},	// input
R(2)	{"O", 		0x8000u, 0x08, _ 0x00000000},	// output
//R(3)	{"R", 		0x8001u, 0x08, _ 0x00000000},	// output
R(4)	{"r004", 		0x8002u, 0x01, _ 0x00000000},	// static
R(5)	{"r005", 		0x8003u, 0x01, _ 0x00000000},	// static
R(6)	{"r006", 		0x8004u, 0x01, _ 0x00000000},	// static
R(7)	{"r007", 		0x8005u, 0x01, _ 0x00000000},	// static
R(8)	{"r008", 		0x8006u, 0x01, _ 0x00000000},	// static
R(9)	{"r009", 		0x8007u, 0x01, _ 0x00000000},	// static
R(10)	{"r010", 		0x8008u, 0x01, _ 0x00000000},	// static
R(11)	{"r011", 		0x8009u, 0x01, _ 0x00000000},	// static
R(12)	{"r012", 		0x800Au, 0x01, _ 0x00000000},	// static
R(13)	{"r013", 		0x800Bu, 0x01, _ 0x00000000},	// static
R(14)	{"r014", 		0x800Cu, 0x01, _ 0x00000000},	// static
R(15)	{"r015", 		0x800Du, 0x01, _ 0x00000000},	// static
R(16)	{"r016", 		0x800Eu, 0x01, _ 0x00000000},	// static
R(17)	{"r017", 		0x800Fu, 0x01, _ 0x00000000},	// static
R(18)	{"r018", 		0x8010u, 0x01, _ 0x00000000},	// static
R(19)	{"r019", 		0x8011u, 0x01, _ 0x00000000},	// static
R(20)	{"r020", 		0x8012u, 0x01, _ 0x00000000},	// static
R(21)	{"r021", 		0x8013u, 0x01, _ 0x00000000},	// static
R(22)	{"r022", 		0x8014u, 0x01, _ 0x00000000},	// static
R(23)	{"r023", 		0x8015u, 0x01, _ 0x00000000},	// static
R(24)	{"r024", 		0x8016u, 0x01, _ 0x00000000},	// static
R(25)	{"r025", 		0x8017u, 0x01, _ 0x00000000},	// static
R(26)	{"r026", 		0x8018u, 0x01, _ 0x00000000},	// static
R(27)	{"r027", 		0x8019u, 0x01, _ 0x00000000},	// static
R(28)	{"r028", 		0x801Au, 0x01, _ 0x00000000},	// static
R(29)	{"r029", 		0x801Bu, 0x01, _ 0x00000000},	// static
R(30)	{"r030", 		0x801Cu, 0x01, _ 0x00000000},	// static
R(31)	{"r031", 		0x801Du, 0x01, _ 0x00000000},	// static
R(32)	{"r032", 		0x801Eu, 0x01, _ 0x00000000},	// static
R(33)	{"r033", 		0x801Fu, 0x01, _ 0x00000000},	// static
R(34)	{"r034", 		0x8020u, 0x01, _ 0x00000000},	// static
//R(35)	{"r035", 		0x8021u, 0x01, _ 0x00000000},	// static
//R(36)	{"r036", 		0x8022u, 0x01, _ 0x00000000},	// static
//R(37)	{"r037", 		0x8023u, 0x01, _ 0x00000000},	// static
//R(38)	{"r038", 		0x8024u, 0x01, _ 0x00000000},	// static
//R(39)	{"r039", 		0x8025u, 0x01, _ 0x00000000},	// static
//R(40)	{"r040", 		0x8026u, 0x01, _ 0x00000000},	// static
//R(41)	{"r041", 		0x8027u, 0x01, _ 0x00000000},	// static
//R(42)	{"r042", 		0x8028u, 0x01, _ 0x00000000},	// static
//R(43)	{"r043", 		0x8029u, 0x01, _ 0x00000000},	// static
//R(44)	{"r044", 		0x802Au, 0x01, _ 0x00000000},	// static
R(45)	{"r045", 		0x802Bu, 0x01, _ 0x00000001},	// static
R(46)	{"r046", 		0x802Cu, 0x01, _ 0x7FFFFFFF},	// static, 1.0
R(47)	{"r047", 		0x802Du, 0x01, _ 0x00066666},	// static
R(48)	{"r048", 		0x802Eu, 0x03, _ 0x00000000},	// temp
};
#undef _
#undef R

#define I(i)
const dsp_code eqp5_dspm_code[] =
{
I(0)	{0x0, 0x802Eu, 0x2050u, 0x4000u, 0x8002u},	// {macs,	R_T, 0x2050u, R_IN0, R_B00	},
I(1)	{0x6, 0x8000u, 0x2056u, 0x8017u, 0x2040u},	// {acc3,	R_OUT0, 0x2056u, R_Z001, 0x2040u	},
I(2)	{0x0, 0x8017u, 0x8018u, 0x8000u, 0x8005u},	// {macs,	R_Z001, R_Z002, R_OUT0, R_A01	},
I(3)	{0x0, 0x8017u, 0x2056u, 0x802Eu, 0x8003u},	// {macs,	R_Z001, 0x2056u, R_T, R_B01	},
I(4)	{0x0, 0x8018u, 0x2040u, 0x8000u, 0x8006u},	// {macs,	R_Z002, 0x2040u, R_OUT0, R_A02	},
I(5)	{0x0, 0x8018u, 0x2056u, 0x802Eu, 0x8004u},	// {macs,	R_Z002, 0x2056u, R_T, R_B02	},
I(6)	{0x6, 0x802Eu, 0x8000u, 0x8019u, 0x2040u},	// {acc3,	R_T, R_OUT0, R_Z011, 0x2040u	},
I(7)	{0x0, 0x8019u, 0x801Au, 0x802Eu, 0x8009u},	// {macs,	R_Z011, R_Z012, R_T, R_A11	},
I(8)	{0x0, 0x8019u, 0x2056u, 0x8000u, 0x8007u},	// {macs,	R_Z011, 0x2056u, R_OUT0, R_B11	},
I(9)	{0x0, 0x801Au, 0x2040u, 0x802Eu, 0x800Au},	// {macs,	R_Z012, 0x2040u, R_T, R_A12	},
I(10)	{0x0, 0x801Au, 0x2056u, 0x8000u, 0x8008u},	// {macs,	R_Z012, 0x2056u, R_OUT0, R_B12	},
I(11)	{0x6, 0x8000u, 0x802Eu, 0x801Bu, 0x2040u},	// {acc3,	R_OUT0, R_T, R_Z021, 0x2040u	},
I(12)	{0x0, 0x801Bu, 0x801Cu, 0x8000u, 0x800Du},	// {macs,	R_Z021, R_Z022, R_OUT0, R_A21	},
I(13)	{0x0, 0x801Bu, 0x2056u, 0x802Eu, 0x800Bu},	// {macs,	R_Z021, 0x2056u, R_T, R_B21	},
I(14)	{0x0, 0x801Cu, 0x2040u, 0x8000u, 0x800Eu},	// {macs,	R_Z022, 0x2040u, R_OUT0, R_A22	},
I(15)	{0x0, 0x801Cu, 0x2056u, 0x802Eu, 0x800Cu},	// {macs,	R_Z022, 0x2056u, R_T, R_B22	},
I(16)	{0x6, 0x802Eu, 0x8000u, 0x801Du, 0x2040u},	// {acc3,	R_T, R_OUT0, R_Z031, 0x2040u	},
I(17)	{0x0, 0x801Du, 0x801Eu, 0x802Eu, 0x8011u},	// {macs,	R_Z031, R_Z032, R_T, R_A31	},
I(18)	{0x0, 0x801Du, 0x2056u, 0x8000u, 0x800Fu},	// {macs,	R_Z031, 0x2056u, R_OUT0, R_B31	},
I(19)	{0x0, 0x801Eu, 0x2040u, 0x802Eu, 0x8012u},	// {macs,	R_Z032, 0x2040u, R_T, R_A32	},
I(20)	{0x0, 0x801Eu, 0x2056u, 0x8000u, 0x8010u},	// {macs,	R_Z032, 0x2056u, R_OUT0, R_B32	},
I(21)	{0x6, 0x8000u, 0x802Eu, 0x801Fu, 0x2040u},	// {acc3,	R_OUT0, R_T, R_Z041, 0x2040u	},
I(22)	{0x0, 0x801Fu, 0x8020u, 0x8000u, 0x8015u},	// {macs,	R_Z041, R_Z042, R_OUT0, R_A41	},
I(23)	{0x0, 0x801Fu, 0x2056u, 0x802Eu, 0x8013u},	// {macs,	R_Z041, 0x2056u, R_T, R_B41	},
I(24)	{0x0, 0x8020u, 0x2040u, 0x8000u, 0x8016u},	// {macs,	R_Z042, 0x2040u, R_OUT0, R_A42	},
I(25)	{0x0, 0x8020u, 0x2056u, 0x802Eu, 0x8014u},	// {macs,	R_Z042, 0x2056u, R_T, R_B42	},
I(26)	{0x4, 0x8000u, 0x2047u, 0x8000u, 0x802Bu},	// {macints,	R_OUT0, 0x2047u, R_OUT0, R_G	},
/*I(27)	{0x0, 0x802Eu, 0x2050u, 0x4001u, 0x8002u},	// {macs,	R_T, 0x2050u, R_IN1, R_B00	},
I(28)	{0x6, 0x8001u, 0x2056u, 0x8021u, 0x2040u},	// {acc3,	R_OUT1, 0x2056u, R_Z101, 0x2040u	},
I(29)	{0x0, 0x8021u, 0x8022u, 0x8001u, 0x8005u},	// {macs,	R_Z101, R_Z102, R_OUT1, R_A01	},
I(30)	{0x0, 0x8021u, 0x2056u, 0x802Eu, 0x8003u},	// {macs,	R_Z101, 0x2056u, R_T, R_B01	},
I(31)	{0x0, 0x8022u, 0x2040u, 0x8001u, 0x8006u},	// {macs,	R_Z102, 0x2040u, R_OUT1, R_A02	},
I(32)	{0x0, 0x8022u, 0x2056u, 0x802Eu, 0x8004u},	// {macs,	R_Z102, 0x2056u, R_T, R_B02	},
I(33)	{0x6, 0x802Eu, 0x8001u, 0x8023u, 0x2040u},	// {acc3,	R_T, R_OUT1, R_Z111, 0x2040u	},
I(34)	{0x0, 0x8023u, 0x8024u, 0x802Eu, 0x8009u},	// {macs,	R_Z111, R_Z112, R_T, R_A11	},
I(35)	{0x0, 0x8023u, 0x2056u, 0x8001u, 0x8007u},	// {macs,	R_Z111, 0x2056u, R_OUT1, R_B11	},
I(36)	{0x0, 0x8024u, 0x2040u, 0x802Eu, 0x800Au},	// {macs,	R_Z112, 0x2040u, R_T, R_A12	},
I(37)	{0x0, 0x8024u, 0x2056u, 0x8001u, 0x8008u},	// {macs,	R_Z112, 0x2056u, R_OUT1, R_B12	},
I(38)	{0x6, 0x8001u, 0x802Eu, 0x8025u, 0x2040u},	// {acc3,	R_OUT1, R_T, R_Z121, 0x2040u	},
I(39)	{0x0, 0x8025u, 0x8026u, 0x8001u, 0x800Du},	// {macs,	R_Z121, R_Z122, R_OUT1, R_A21	},
I(40)	{0x0, 0x8025u, 0x2056u, 0x802Eu, 0x800Bu},	// {macs,	R_Z121, 0x2056u, R_T, R_B21	},
I(41)	{0x0, 0x8026u, 0x2040u, 0x8001u, 0x800Eu},	// {macs,	R_Z122, 0x2040u, R_OUT1, R_A22	},
I(42)	{0x0, 0x8026u, 0x2056u, 0x802Eu, 0x800Cu},	// {macs,	R_Z122, 0x2056u, R_T, R_B22	},
I(43)	{0x6, 0x802Eu, 0x8001u, 0x8027u, 0x2040u},	// {acc3,	R_T, R_OUT1, R_Z131, 0x2040u	},
I(44)	{0x0, 0x8027u, 0x8028u, 0x802Eu, 0x8011u},	// {macs,	R_Z131, R_Z132, R_T, R_A31	},
I(45)	{0x0, 0x8027u, 0x2056u, 0x8001u, 0x800Fu},	// {macs,	R_Z131, 0x2056u, R_OUT1, R_B31	},
I(46)	{0x0, 0x8028u, 0x2040u, 0x802Eu, 0x8012u},	// {macs,	R_Z132, 0x2040u, R_T, R_A32	},
I(47)	{0x0, 0x8028u, 0x2056u, 0x8001u, 0x8010u},	// {macs,	R_Z132, 0x2056u, R_OUT1, R_B32	},
I(48)	{0x6, 0x8001u, 0x802Eu, 0x8029u, 0x2040u},	// {acc3,	R_OUT1, R_T, R_Z141, 0x2040u	},
I(49)	{0x0, 0x8029u, 0x802Au, 0x8001u, 0x8015u},	// {macs,	R_Z141, R_Z142, R_OUT1, R_A41	},
I(50)	{0x0, 0x8029u, 0x2056u, 0x802Eu, 0x8013u},	// {macs,	R_Z141, 0x2056u, R_T, R_B41	},
I(51)	{0x0, 0x802Au, 0x2040u, 0x8001u, 0x8016u},	// {macs,	R_Z142, 0x2040u, R_OUT1, R_A42	},
I(52)	{0x0, 0x802Au, 0x2056u, 0x802Eu, 0x8014u},	// {macs,	R_Z142, 0x2056u, R_T, R_B42	},
I(53)	{0x4, 0x8001u, 0x2047u, 0x8001u, 0x802Bu},	// {macints,	R_OUT1, 0x2047u, R_OUT1, R_G	},*/
I(54)	{0xE, 0x8002u, 0x8002u, 0x802Du, 0x802Cu},	// {interp,	R_B00, R_B00, R_D, R_BX	},
};
#undef I

// ............................................................................

#endif



// register ids
#define R_IN0		0x4000u
#define R_IN1		0x4001u
#define R_OUT0		0x8000u
#define R_OUT1		0x8001u
#define R_B00		0x8002u
#define R_B01		0x8003u
#define R_B02		0x8004u
#define R_A01		0x8005u
#define R_A02		0x8006u
#define R_B11		0x8007u
#define R_B12		0x8008u
#define R_A11		0x8009u
#define R_A12		0x800Au
#define R_B21		0x800Bu
#define R_B22		0x800Cu
#define R_A21		0x800Du
#define R_A22		0x800Eu
#define R_B31		0x800Fu
#define R_B32		0x8010u
#define R_A31		0x8011u
#define R_A32		0x8012u
#define R_B41		0x8013u
#define R_B42		0x8014u
#define R_A41		0x8015u
#define R_A42		0x8016u
#define R_Z001		0x8017u
#define R_Z002		0x8018u
#define R_Z011		0x8019u
#define R_Z012		0x801Au
#define R_Z021		0x801Bu
#define R_Z022		0x801Cu
#define R_Z031		0x801Du
#define R_Z032		0x801Eu
#define R_Z041		0x801Fu
#define R_Z042		0x8020u
#define R_Z101		0x8021u
#define R_Z102		0x8022u
#define R_Z111		0x8023u
#define R_Z112		0x8024u
#define R_Z121		0x8025u
#define R_Z122		0x8026u
#define R_Z131		0x8027u
#define R_Z132		0x8028u
#define R_Z141		0x8029u
#define R_Z142		0x802Au
#define R_G		0x802Bu
#define R_BX		0x802Cu
#define R_D		0x802Du
#define R_T		0x802Eu
